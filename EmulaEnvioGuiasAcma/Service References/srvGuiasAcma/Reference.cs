//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmulaEnvioGuiasAcma.srvGuiasAcma {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="srvGuiasAcma.IManifiesto")]
    public interface IManifiesto {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManifiesto/EnviarArchivoACMA", ReplyAction="http://tempuri.org/IManifiesto/EnviarArchivoACMAResponse")]
        int EnviarArchivoACMA(string usuario, string clave, string tipoTransaccion, byte[] buffer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManifiesto/EnviarArchivoACMA", ReplyAction="http://tempuri.org/IManifiesto/EnviarArchivoACMAResponse")]
        System.Threading.Tasks.Task<int> EnviarArchivoACMAAsync(string usuario, string clave, string tipoTransaccion, byte[] buffer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManifiesto/EnviarArchivoDuas", ReplyAction="http://tempuri.org/IManifiesto/EnviarArchivoDuasResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="mensaje")]
        string EnviarArchivoDuas(byte[] buffer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManifiesto/EnviarArchivoDuas", ReplyAction="http://tempuri.org/IManifiesto/EnviarArchivoDuasResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="mensaje")]
        System.Threading.Tasks.Task<string> EnviarArchivoDuasAsync(byte[] buffer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManifiesto/DoWork", ReplyAction="http://tempuri.org/IManifiesto/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManifiesto/DoWork", ReplyAction="http://tempuri.org/IManifiesto/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManifiestoChannel : EmulaEnvioGuiasAcma.srvGuiasAcma.IManifiesto, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManifiestoClient : System.ServiceModel.ClientBase<EmulaEnvioGuiasAcma.srvGuiasAcma.IManifiesto>, EmulaEnvioGuiasAcma.srvGuiasAcma.IManifiesto {
        
        public ManifiestoClient() {
        }
        
        public ManifiestoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManifiestoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManifiestoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManifiestoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int EnviarArchivoACMA(string usuario, string clave, string tipoTransaccion, byte[] buffer) {
            return base.Channel.EnviarArchivoACMA(usuario, clave, tipoTransaccion, buffer);
        }
        
        public System.Threading.Tasks.Task<int> EnviarArchivoACMAAsync(string usuario, string clave, string tipoTransaccion, byte[] buffer) {
            return base.Channel.EnviarArchivoACMAAsync(usuario, clave, tipoTransaccion, buffer);
        }
        
        public string EnviarArchivoDuas(byte[] buffer) {
            return base.Channel.EnviarArchivoDuas(buffer);
        }
        
        public System.Threading.Tasks.Task<string> EnviarArchivoDuasAsync(byte[] buffer) {
            return base.Channel.EnviarArchivoDuasAsync(buffer);
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
    }
}
